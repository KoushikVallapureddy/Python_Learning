Instance vs Class Variables:
Instance variables are unique to each object, while class variables are shared by all objects of the same class.

Here is an example of a class with both types of variables
    class Student:
        # Class variable - shared by all instances
        school = "Python High School"
        
        def __init__(self, name, grade):
            # Instance variables - unique to each student
            self.name = name
            self.grade = grade

Create student objects:
    alice = Student("Alice", "A")
    bob = Student("Bob", "B")

Access instance variables (unique to each object):
    print(alice.name)  # Alice
    print(bob.name)    # Bob
    print(alice.grade) # A
    print(bob.grade)   # B

Access class variables (shared by all objects):
    print(alice.school)     # Python High School
    print(bob.school)       # Python High School
    print(Student.school)   # Python High School

Now change the class variable:
    Student.school = "Python Academy"

Check how the change affects all instances:
    print(alice.school)   # Python Academy
    print(bob.school)     # Python Academy

Output:
    Alice
    Bob
    A
    B
    Python High School
    Python High School
    Python High School
    Python Academy
    Python Academy
    
You can also create instance variables after object creation:
    alice.age = 16  # This creates an instance variable
    print(alice.age)  # 16
    # print(bob.age)  # This would cause an error - bob doesn't have age
